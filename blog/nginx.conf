
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    ##cache##
    proxy_temp_path /opt/nginx/temp_dir;
    proxy_cache_path /opt/nginx/cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;
    ##cache end##

    #反向代理服务器
    server {
        listen       80;
        server_name  localhost;
        index  index.html index.htm;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass                 http://192.168.84.128:2222;
            proxy_set_header           Host $Host;
            proxy_set_header           X-Real-IP   $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #在header头添加信息
        add_header X-Via $server_addr;
        add_header X-Cache $upstream_cache_status;

        ## Cache_proxy Purge
        location ~ /purge(/.*) {
            #限制访问IP
            #allow  192.168.84.128; #允许
            #deny   all;            #禁止
            allow all;
            proxy_cache_purge cache_one $host$1$is_args$args;
        }

        location ~ \.(gif|jpg|jpeg|png|bmp|ico)$ {
           proxy_cache cache_one; #设置资源缓存的zone
           proxy_cache_valid 200 304 12h;  #对不同的HTTP状态码设置不同的缓存时间
           proxy_cache_valid 301 302 1m;  #对不同的HTTP状态码设置不同的缓存时间
           proxy_cache_valid any 1m;  #对不同的HTTP状态码设置不同的缓存时间
           proxy_cache_key $host$uri$is_args$args; #设置缓存的key，以域名、URI、参数组合成Web缓存的Key值，Nginx根据Key值哈希，存储缓存内容到二级缓存目录内
           proxy_set_header Host  $host;
           proxy_set_header X-Forwarded-For  $remote_addr;
           proxy_pass http://192.168.84.128:2222;
           expires 7d; #缓存时间
        }
        ## Cache_proxy End

        location  ^~ /api/ {
            proxy_pass                 http://192.168.84.128:1337;
            proxy_set_header           Host $Host;
            proxy_set_header           X-Real-IP   $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #location ~ .*\.(gif|jpeg|jpg|png|bmp|flv|swf|css|js|ico)$ {
        #    proxy_pass                 http://192.168.84.128:1337;
        #    proxy_redirect             off;
        #    proxy_set_header           Host '192.168.84.128:1337';
        #    proxy_set_header           X-Real-IP        $remote_addr;
        #    proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
        #}

        #location ~ /(images|img|fonts|all|js|logo|ujs|ueditor|assets|r|i)/ {
        #    proxy_pass                 http://192.168.84.128:1337;
        #    proxy_redirect             off;
        #    proxy_set_header           Host '192.168.84.128:1337';
        #    proxy_set_header           X-Real-IP        $remote_addr;
        #    proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
        #}

        location ~ /(tmp)/ {
            proxy_pass                 http://192.168.84.128:1337;
            proxy_redirect             off;
            proxy_set_header           Host '192.168.84.128:1337';
            proxy_set_header           X-Real-IP        $remote_addr;
            proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location ~* /blog\/([a-z0-9]*).html$ {
            rewrite "^/blog\/([a-z0-9]*).html$" /blogDetail.html break;
            proxy_pass                 http://192.168.84.128:2222;
            proxy_set_header           Host $Host;
            proxy_set_header           X-Real-IP        $remote_addr;
            proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        location ~* /blog\/([a-z0-9]*)\/edit$ {
            rewrite "^/blog\/([a-z0-9]*)\/edit$" /edit.html break;
            proxy_pass                 http://localhost;
            proxy_set_header           Host $Host;
            proxy_set_header           X-Real-IP        $remote_addr;
            proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    #主服务器
    server {
        listen       2222;
        server_name  localhost;

        location / {
            #限制访问IP
            #allow  192.168.84.128;
            #deny   all;
            root   /usr/local/node/Demos/client/;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    #测试服务器
    server {
        listen       1111;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location  ^~ /api/ {
            proxy_pass                 http://192.168.84.128:1337;
            proxy_set_header           Host $Host;
            proxy_set_header           X-Real-IP   $remote_addr;
            proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
